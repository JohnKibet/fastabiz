@page "/auth/forgot-password"
@using System.ComponentModel.DataAnnotations
@layout PublicLayout
@inject HttpClient Http
@inject AuthenticationStateProvider AuthProvider
@inject NavigationManager Navigation

<h3>ðŸ”‘ Forgot Password</h3>

<p>Enter your email to receive a password reset link:</p>

<EditForm Model="@model" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label>Email</label>
        <InputText @bind-Value="model.Email" class="form-control" />
        <ValidationMessage For="@(() => model.Email)" />
    </div>

    <button class="btn btn-primary">Send Reset Link</button>

    @if (!string.IsNullOrEmpty(message))
    {
        <p>@message</p>
    }
</EditForm>

@code {
    private ForgotPasswordModel model = new();
    private string? message;

    protected override async Task OnInitializedAsync()
    {
        var state = await AuthProvider.GetAuthenticationStateAsync();
        var user = state.User;

        if (user.Identity?.IsAuthenticated == true)
        {
            var role = user.FindFirst(System.Security.Claims.ClaimTypes.Role)?.Value;

            Navigation.NavigateTo(role switch
            {
                "admin" => "/admin/dashboard",
                "diver" => "/driver/dashboard",
                "customer" => "/customer/dashboard",
                "_" => "/"
            }, forceLoad: true);
        }
    }

    private async Task HandleSubmit()
    {
        var response = await Http.PostAsJsonAsync("auth/request-reset", model);
        message = response.IsSuccessStatusCode 
            ? "Check your email for the reset link."
            : "Could not send reset link.";
    }

    public class ForgotPasswordModel
    {
        [Required, EmailAddress]
        public string Email { get; set; } = string.Empty;
    }
}
