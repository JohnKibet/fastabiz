@page "/admin/my-store"
@layout MainLayout
@using frontend.Models.Store
@inject StoreService StoreService
@inject ToastService ToastService

<h2 class="text-2xl font-semibold mb-4">My Storefront</h2>

@if (store == null)
{
    <p>No store found.</p>
}
else
{
    <div class="bg-white shadow-sm rounded-xl overflow-hidden mb-6">
        @if (!string.IsNullOrEmpty(store.BannerURL))
        {
            <div class="h-48 bg-cover bg-center" style="background-image:url(@store.BannerURL)"></div>
        }

        <div class="p-6">
            <div class="flex items-center gap-4">
                @if (!string.IsNullOrEmpty(store.LogoURL))
                {
                    <img src="@store.LogoURL" class="w-20 h-20 rounded-full border" />
                }
                <div>
                    <h3 class="text-xl font-bold">@store.Name</h3>
                    <p class="text-gray-600">@store.Description</p>
                    <p class="text-sm text-gray-500">Link: 
                        <a href="/store/@store.Slug" target="_blank" class="text-orange-600 underline">
                            fastabiz.co/store/@store.Slug
                        </a>
                    </p>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private Store? store;
    [CascadingParameter] private Guid? UserId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (UserId.HasValue)
        {
            store = await StoreService.GetStoreByOwner(UserId.Value);
        }
        else if (store == null)
        {
            ToastService.ShowToast("You donâ€™t have a store yet.", ToastService.ToastLevel.Warning);
        }
        else
        {
            ToastService.ShowToast("Please log in to create store.", ToastService.ToastLevel.Error);
        }
    }
}
