@using System.Security.Claims
@using logistics_frontend.Models
@namespace logistics_frontend.Pages.Shared.Sidebars.SidebarComponent
@inject AuthenticationStateProvider AuthProvider

<div class="min-h-screen bg-white border-r shadow-sm transition-all duration-300 @(IsCollapsed ? "w-16" : "w-64")">
    <!-- Header with toggle button -->
    <div class="flex items-center justify-between px-4 py-2 border-b">
        @if (!IsCollapsed)
        {
            <span class="text-xl font-normal text-orange-600">Pages</span>
        }
        <button class="text-gray-600" @onclick="ToggleSidebar" aria-label="Toggle Sidebar">
            @if (IsCollapsed)
            {
                <!-- Open icon -->
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none"
                     stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                     class="lucide lucide-arrow-right-to-line">
                    <path d="M17 12H3" />
                    <path d="m11 18 6-6-6-6" />
                    <path d="M21 5v14" />
                </svg>
            }
            else
            {
                <!-- Close icon -->
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none"
                     stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                     class="lucide lucide-arrow-left-to-line">
                    <path d="M3 19V5" />
                    <path d="m13 6-6 6 6 6" />
                    <path d="M7 12h14" />
                </svg>
            }
        </button>
    </div>

    <!-- Menu Items -->
    <nav class="mt-4 px-2 space-y-1">
        @if (Role == "admin")
        {
            @foreach (var item in AdminMenu)
            {
                <SidebarItem Item="item" IsCollapsed="IsCollapsed" />
            }
        }
        else if (Role == "driver")
        {
            @foreach (var item in DriverMenu)
            {
                <SidebarItem Item="item" IsCollapsed="IsCollapsed" />
            }
        }
        else if (Role == "customer")
        {
            @foreach (var item in CustomerMenu)
            {
                <SidebarItem Item="item" IsCollapsed="IsCollapsed" />
            }
        }
        else
        {
            @if (!IsCollapsed)
            {
                <p class="text-sm text-gray-500 px-4">No menu for your role.</p>
            }
        }
    </nav>
</div>

@code {
    private bool IsCollapsed = false;
    private string? Role;
    [Parameter] public EventCallback<bool> OnCollapseChanged { get; set; }
    protected override async Task OnInitializedAsync()
    {
        var state = await AuthProvider.GetAuthenticationStateAsync();
        var user = state.User;
        Role = user.FindFirst(ClaimTypes.Role)?.Value;
    }
    private void ToggleSidebar()  
    {
        IsCollapsed = !IsCollapsed;
        OnCollapseChanged.InvokeAsync(IsCollapsed);
    }
    private List<SidebarMenuItem> AdminMenu => new()
    {
        new("Dashboard", "/admin/dashboard", "house"),
        new("Create Order", "/admin/createorder", "file-plus"),
        new("Orders", "/admin/orders", "file-stack"),
        new("Create Inventory", "/admin/createinventory", "folder-plus"),
        new("Inventories", "/admin/inventories", "layers"),
        new("Reports", "/admin/reports", "clipboard-minus"),
        new("Users", "/admin/users", "users"),
        new("Create User", "/admin/createuser", ""),
        new("Map", "/admin/map", "")
    };

    private List<SidebarMenuItem> DriverMenu => new()
    {
        new("Dashboard", "/driver/dashboard", ""),
        new("Deliveries", "/driver/deliveries", "package"),
        new("Route", "/driver/route", "route"),
        new("Proof", "/driver/proof", "package-check"),
    };

    private List<SidebarMenuItem> CustomerMenu => new()
    {
        new("Dashboard", "/customer/dashboard", ""),
        new("New Order", "/customer/neworder", "file-plus"),
        new("My Orders", "/customer/myorders", "files"),
        new("Rate Your Delivery", "/customer/feedback", "star"),
        new("Track Your Order", "/customer/trackorder", "route"),
        new("Payments", "/customer/payments", "")
    };
}
