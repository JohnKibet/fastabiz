@using logistics_frontend.Models.Delivery

<table class="min-w-full table-auto text-sm text-left text-gray-700">
    <thead class="bg-gray-50 text-xs uppercase text-gray-500 border-b">
         <tr>
            <th class="px-4 py-3">No.</th>
            <td class="px-4 py-3">Assigned At</td>
            <td class="px-4 py-3">Order ID</td>
            <td class="px-4 py-3">Status</td>
            <td class="px-4 py-3">Pickedup At</td>
            <td class="px-4 py-3">Delivered At</td>
            <th class="px-4 py-3 text-right">Actions</th>
        </tr>
    </thead>

    <tbody>
        @if (PagedDeliveries?.Any() == true)
        {
            @foreach (var (delivery, index) in PagedDeliveries.Select((d, i) => (d, i)))
            {
                <tr class="border-b hover:bg-gray-50">
                    <td class="px-4 py-2">@((index + 1) + (CurrentPage - 1) * PageSize)</td>
                    <td class="px-4 py-2">@delivery.AssignedAt</td>
                    <td class="px-4 py-2">@delivery.OrderID</td>
                    <td class="px-4 py-2">
                        <span class="@GetStatusClass(delivery.Status.ToString())">
                            @delivery.Status
                        </span>
                    </td>
                    <td class="px-4 py-2">@delivery.PickedUpAt</td>
                    <td class="px-4 py-2">@delivery.DeliveredAt</td>
                    <td class="px-4 py-2 text-right">
                        <TableRowActions
                            ColumnValueId="@delivery.ID"
                            OnView="OnView"
                            OnEdit="OnEdit"
                            OnDelete="OnDelete"
                        />
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="7" class="text-center text-gray-500 py-4">No deliveries found.</td>
            </tr>
        }
    </tbody>
</table>

@code {
    [Parameter] public List<Delivery> PagedDeliveries { get; set; } = new();
    [Parameter] public int CurrentPage { get; set; }
    [Parameter] public int PageSize { get; set; }

    [Parameter] public EventCallback<Guid> OnView { get; set; }
    [Parameter] public EventCallback<Guid> OnEdit { get; set; }
    [Parameter] public EventCallback<Guid> OnDelete { get; set; }

    [Parameter] public Func<string?, string> GetStatusClass { get; set; } = status => "";
}