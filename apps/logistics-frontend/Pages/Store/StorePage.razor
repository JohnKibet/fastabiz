@page "/store/{adminSlug}"
@layout PublicLayout
@inject HttpClient Http
@using logistics_frontend.Models.Inventory

<h2>@adminSlug's Store</h2>

@if (IsLoading)
{
    <p>Loading products ...</p>
}
else if (StoreView == null || StoreView.Products.Count == 0)
{
    <p>No products found for this store.</p>
}
else
{
    <div class="row">
        @foreach (var product in StoreView.Products)
        {
            <div class="col-md-4 mb-4">
                <div class="card h-100">
                    <img 
                        src="@product.Images.Split(',')[0]"
                        class="card-img-top" 
                        style="height: 180px; object-fit: cover;"
                    />
                    <div class="card-body">
                        <h5 class="card-title">@product.Name</h5>
                        <p>@product.Description</p>
                        <a class="btn btn-primary" href="/store/@adminSlug/product/@product.Slug">View Product</a>
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    [Parameter] public string? adminSlug { get; set; }
    private StorePublicView? StoreView;
    private bool IsLoading = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            StoreView = await Http.GetFromJsonAsync<StorePublicView>($"public/store/{adminSlug}");
        }
        catch 
        {
            StoreView = null;
        }
        IsLoading = false;
    }
}